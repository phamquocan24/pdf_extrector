const nodemailer = require('nodemailer');

// Create transporter (using Gmail as example)
const createTransporter = () => {
  return nodemailer.createTransporter({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER || 'your-email@gmail.com',
      pass: process.env.EMAIL_PASS || 'your-app-password'
    }
  });
};

// Send reset password email
const sendResetPasswordEmail = async (email, resetToken, userName) => {
  try {
    const transporter = createTransporter();
    
    const resetUrl = `${process.env.FRONTEND_URL || 'http://localhost:5173'}/reset-password/${resetToken}`;
    
    const mailOptions = {
      from: process.env.EMAIL_FROM || 'PDF Extractor <noreply@pdfextractor.com>',
      to: email,
      subject: 'Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - PDF Extractor',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #007BFF; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .button { display: inline-block; background: #007BFF; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
            .footer { text-align: center; margin-top: 20px; color: #666; font-size: 12px; }
            .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>PDF Extractor</h1>
              <h2>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
            </div>
            
            <div class="content">
              <p>Xin ch√†o <strong>${userName}</strong>,</p>
              
              <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i PDF Extractor.</p>
              
              <p>ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi:</p>
              
              <div style="text-align: center;">
                <a href="${resetUrl}" class="button">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
              </div>
              
              <p>Ho·∫∑c copy v√† d√°n link sau v√†o tr√¨nh duy·ªát:</p>
              <p style="word-break: break-all; background: #f1f1f1; padding: 10px; border-radius: 5px;">
                ${resetUrl}
              </p>
              
              <div class="warning">
                <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>
                <ul>
                  <li>Link n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>1 gi·ªù</strong></li>
                  <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                  <li>ƒê·ªÉ b·∫£o m·∫≠t, kh√¥ng chia s·∫ª link n√†y v·ªõi ai kh√°c</li>
                </ul>
              </div>
              
              <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá ƒë·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i.</p>
              
              <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© PDF Extractor</strong></p>
            </div>
            
            <div class="footer">
              <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.</p>
              <p>&copy; 2025 PDF Extractor. All rights reserved.</p>
            </div>
          </div>
        </body>
        </html>
      `
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log('Reset password email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error('Error sending reset password email:', error);
    throw new Error('Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i sau.');
  }
};

// Send email confirmation after password reset
const sendPasswordResetConfirmation = async (email, userName) => {
  try {
    const transporter = createTransporter();
    
    const mailOptions = {
      from: process.env.EMAIL_FROM || 'PDF Extractor <noreply@pdfextractor.com>',
      to: email,
      subject: 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng - PDF Extractor',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <title>M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .success { background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; margin: 20px 0; }
            .footer { text-align: center; margin-top: 20px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>PDF Extractor</h1>
              <h2>‚úÖ M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i</h2>
            </div>
            
            <div class="content">
              <p>Xin ch√†o <strong>${userName}</strong>,</p>
              
              <div class="success">
                <strong>üéâ Th√†nh c√¥ng!</strong><br>
                M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng v√†o l√∫c ${new Date().toLocaleString('vi-VN')}.
              </div>
              
              <p>B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n b·∫±ng m·∫≠t kh·∫©u m·ªõi.</p>
              
              <p><strong>M·ªôt s·ªë l∆∞u √Ω b·∫£o m·∫≠t:</strong></p>
              <ul>
                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi b·∫•t k·ª≥ ai</li>
                <li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh, kh√≥ ƒëo√°n</li>
                <li>ƒêƒÉng xu·∫•t kh·ªèi c√°c thi·∫øt b·ªã kh√¥ng tin c·∫≠y</li>
              </ul>
              
              <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thao t√°c n√†y, vui l√≤ng li√™n h·ªá ngay v·ªõi ƒë·ªôi ng≈© h·ªó tr·ª£.</p>
              
              <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© PDF Extractor</strong></p>
            </div>
            
            <div class="footer">
              <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.</p>
              <p>&copy; 2025 PDF Extractor. All rights reserved.</p>
            </div>
          </div>
        </body>
        </html>
      `
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log('Password reset confirmation email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error('Error sending confirmation email:', error);
    // Don't throw error for confirmation email failure
    return { success: false, error: error.message };
  }
};

module.exports = {
  sendResetPasswordEmail,
  sendPasswordResetConfirmation
};